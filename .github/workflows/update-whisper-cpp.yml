name: Update Whisper-CPP Sidecar

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Git tag to use for the release (must already exist)'
        required: true
  workflow_call:

jobs:
  build-whisper:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-13
            folder: macos-x86_64
            cmake_opts: ""
          - os: macos-14
            folder: macos-arm64
            cmake_opts: "-DCMAKE_OSX_ARCHITECTURES=arm64"
          - os: windows-latest
            folder: windows-x86_64
            cmake_opts: ""
    env:
      MATRIX_FOLDER: ${{ matrix.folder }}
      RELEASE_TAG: ${{ github.event.inputs.release_tag }}
    defaults:
      run:
        shell: bash

    steps:
      # 1. Checkout the repo
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      # 2. Install cmake
      - name: Install prerequisites
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            choco install cmake -y
          else
            brew install cmake git
          fi

      # 3. Clone whisper.cpp
      - name: Clone whisper.cpp
        run: git clone --depth 1 https://github.com/ggml-org/whisper.cpp.git whisper.cpp

      # 4. Build whisper-cpp
      - name: Build whisper-cpp
        run: |
          mkdir -p whisper.cpp/build
          cd whisper.cpp/build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF ${{ matrix.cmake_opts }}
          cmake --build . --config Release

      # 5. Copy the binary into our sidecar folder
      - name: Copy whisper-cpp binary
        run: |
          mkdir -p whisper-cpp/${{ matrix.folder }}
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cp whisper.cpp/build/bin/Release/whisper-cli.exe whisper-cpp/${{ matrix.folder }}/whisper-cpp.exe
          else
            cp whisper.cpp/build/bin/whisper-cli whisper-cpp/${{ matrix.folder }}/whisper-cpp
          fi

      # 6. Package and upload artifact
      - name: Package and upload artifact
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            BINARY_PATH="whisper-cpp/${{ matrix.folder }}/whisper-cpp.exe"
            SHASUM_CMD="sha256sum"
          else
            BINARY_PATH="whisper-cpp/${{ matrix.folder }}/whisper-cpp"
            SHASUM_CMD="shasum -a 256"
          fi

          # Calculate and save checksum
          $SHASUM_CMD $BINARY_PATH > ${BINARY_PATH}.sha256

          # Prepare artifact directory
          ARTIFACT_DIR="whisper-cpp-artifact-${{ matrix.folder }}"
          mkdir -p $ARTIFACT_DIR
          mv $BINARY_PATH $ARTIFACT_DIR/
          mv ${BINARY_PATH}.sha256 $ARTIFACT_DIR/

          # Upload artifact
          echo "Uploading artifact: $ARTIFACT_DIR"
          ls -R $ARTIFACT_DIR
      - uses: actions/upload-artifact@v3
        with:
          name: whisper-cpp-artifact-${{ matrix.folder }}
          path: whisper-cpp-artifact-${{ matrix.folder }}