name: Update Whisper-CPP Sidecar

permissions:
  contents: write

on:
  workflow_dispatch:
  workflow_call:

jobs:
  build-whisper:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            folder: macos-x86_64
            cmake_opts: ""
          - os: macos-latest
            folder: macos-arm64
            cmake_opts: "-DCMAKE_OSX_ARCHITECTURES=arm64"
          - os: windows-latest
            folder: windows-x86_64
            cmake_opts: ""
    env:
      MATRIX_FOLDER: ${{ matrix.folder }}
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Install prerequisites
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            choco install cmake -y
          else
            brew install cmake git
          fi

      - name: Clone whisper.cpp
        run: |
          git clone --depth 1 https://github.com/ggml-org/whisper.cpp.git whisper.cpp

      - name: Build whisper-cli
        run: |
          mkdir -p whisper.cpp/build
          cd whisper.cpp/build
          cmake .. -DCMAKE_BUILD_TYPE=Release ${{ matrix.cmake_opts }}
          cmake --build . --config Release

      - name: Copy whisper-cli binary
        run: |
          mkdir -p whisper-cpp/${{ matrix.folder }}
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cp whisper.cpp/build/bin/Release/whisper-cli.exe whisper-cpp/${{ matrix.folder }}/whisper-cli.exe
          else
            cp whisper.cpp/build/bin/whisper-cli whisper-cpp/${{ matrix.folder }}/whisper-cli
          fi

      # Step: Ensure GitHub release exists (create if missing)
      - name: Ensure GitHub release
        id: ensure_release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            // Strip any ref prefix
            const tag = process.env.GITHUB_REF.replace(/^refs\/[^\/]+\//, '');
            try {
              const rel = await github.rest.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag
              });
              return rel.data.upload_url;
            } catch {
              const rel = await github.rest.repos.createRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag_name: tag,
                commitish: context.sha,
                name: `whisper-cpp ${tag}`,
                body: `Automated build of whisper-cli for ${process.env.MATRIX_FOLDER}`,
                draft: false,
                prerelease: false
              });
              return rel.data.upload_url;
            }

      # Step: Upload whisper-cli asset
      - name: Upload whisper-cli asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.ensure_release.outputs.result }}
          asset_path: whisper-cpp/${{ matrix.folder }}/whisper-cli${{ matrix.os == 'windows-latest' && '.exe' || '' }}
          asset_name: whisper-cli-${{ matrix.folder }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}
          asset_content_type: application/octet-stream